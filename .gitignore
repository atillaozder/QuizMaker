# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
/webservice/build/
/webservice/develop-eggs/
/webservice/dist/
/webservice/downloads/
/webservice/eggs/
/webservice/.eggs/
/webservice/lib/
/webservice/lib64/
/webservice/parts/
/webservice/sdist/
/webservice/var/
/webservice/wheels/
*.egg-info/
/webservice/.installed.cfg
*.egg
/webservice/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
/webservice/pip-log.txt
/webservice/pip-delete-this-directory.txt

# Unit test / coverage reports
/webservice/htmlcov/
/webservice/.tox/
/webservice/.coverage
/webservice/.coverage.*
/webservice/.cache
/webservice/nosetests.xml
/webservice/coverage.xml
*.cover
/webservice/.hypothesis/
/webservice/.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
/webservice/local_settings.py
/webservice/src/db.sqlite3

# Flask stuff:
/webservice/instance/
/webservice/.webassets-cache

# Scrapy stuff:
/webservice/.scrapy

# Sphinx documentation
/webservice/docs/_build/

# PyBuilder
/webservice/target/

# Jupyter Notebook
/webservice/.ipynb_checkpoints

# pyenv
/webservice/.python-version

# celery beat schedule file
/webservice/celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
/webservice/.env
/webservice/.venv
/webservice/env/
/webservice/venv/
/webservice/ENV/
/webservice/env.bak/
/webservice/venv.bak/

# Spyder project settings
/webservice/.spyderproject
/webservice/.spyproject

# Rope project settings
/webservice/.ropeproject

# mkdocs documentation
/webservice/site

# mypy
/webservice.mypy_cache/

/webservice/src/statics/
/webservice/bin/
/webservice/include/
/webservice/lib/
/webservice/.DS_Store
.DS_Store
/webservice/pip-selfcheck.json
/webservice/pyvenv.cfg
*migrations/

# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## Build generated
/quizmaker/build/
/quizmaker/DerivedData/

## Various settings
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3
xcuserdata/

## Other
*.moved-aside
*.xccheckout
*.xcscmblueprint
*.xcuserstate

## Obj-C/Swift specific
*.hmap
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
.build/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/
#
# Add this line if you want to avoid checking in source code from the Xcode workspace
# *.xcworkspace

Pods/

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build

# Code Injection
#
# After new code Injection tools there's a generated folder /iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode

iOSInjectionProject/
